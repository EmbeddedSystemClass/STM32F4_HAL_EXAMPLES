/*
 * 25lc010a.c
 *
 *  Created on: 2019. 3. 22.
 *      Author: KIKI
 */

#include "25lc010a.h"

SPI_HandleTypeDef* EEPROM_SPI;
GPIO_TypeDef* EEPROM_CS_Port;
uint16_t EEPROM_CS_Pin;

static void EEPROM_Select();
static void EEPROM_Deselect();

void EEPROM_Init(SPI_HandleTypeDef* spi, GPIO_TypeDef* cs_port, uint16_t cs_pin)
{
	EEPROM_SPI = spi;
	EEPROM_CS_Port = cs_port;
	EEPROM_CS_Pin = cs_pin;
}

void EEPROM_WriteEnable(void)
{
	SPI_Select();
	SPI_Tx(EEPROM_CMD_WREN);
	SPI_Deselect();
}

uint8_t EEPROM_ReadByte(uint8_t address)
{
	uint8_t data;

	SPI_Select();
	SPI_Tx(EEPROM_CMD_READ);
	SPI_Tx(address);
	data = SPI_Rx();
	SPI_Deselect();

	return data;
}

void EEPROM_ReadBuffer(uint8_t address, uint8_t *buffer, uint8_t length)
{
	for(uint8_t i=0; i < length; i++)
	{
		buffer[i] = EEPROM_ReadByte(address+i);
	}
}

void EEPROM_WriteByte(uint8_t address, uint8_t data)
{
	EEPROM_WriteEnable();
	SPI_Select();
	SPI_Tx(EEPROM_CMD_WRITE);
	SPI_Tx(address);
	SPI_Tx(data);
	SPI_Deselect();
	_delay_ms(5);
}

void EEPROM_WriteBuffer(uint8_t address, uint8_t *buffer, uint8_t length)
{
	EEPROM_WriteEnable();

	SPI_Select();
	SPI_Tx(EEPROM_CMD_WRITE);
	SPI_Tx(address);

	for(uint8_t i = 0; i < length; i++)
	{
		if( (address+i) % EEPROM_PAGE_SIZE == 0 && i != 0 )
		{
			SPI_Deselect();
			_delay_ms(5);

			EEPROM_WriteEnable();
			SPI_Select();
			SPI_Tx(EEPROM_CMD_WRITE);
			SPI_Tx(address+i);
		}

		SPI_Tx(buffer[i]);
	}

	SPI_Deselect();
	_delay_ms(5);
}

void EEPROM_EraseAll(void)
{
	uint8_t address = 0;

	EEPROM_WriteEnable();

	while(address < EEPROM_TOTAL_SIZE)
	{
		SPI_Select();
		SPI_Tx(EEPROM_CMD_WRITE);
		SPI_Tx(address);

		for(uint8_t i=0; i < EEPROM_PAGE_SIZE; i++)
		{
			SPI_Tx(0);
		}

		SPI_Deselect();
		_delay_ms(5);
		address += EEPROM_PAGE_SIZE;
	}
}

static void EEPROM_Select()
{
	HAL_GPIO_WritePin(EEPROM_CS_Port, EEPROM_CS_Pin, GPIO_PIN_RESET);
}

static void EEPROM_Deselect()
{
	HAL_GPIO_WritePin(EEPROM_CS_Port, EEPROM_CS_Pin, GPIO_PIN_SET);
}
